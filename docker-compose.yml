name: "portfolio"

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - VITE_BACKEND_URL=http://${APP_HOST}:${APP_PORT}
    ports:
      - "4242:80"
    networks:
      - app-network
    restart: on-failure

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - APP_HOST=server
      - APP_NAME=${APP_NAME}
      - APP_PORT=${APP_PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=database
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PROVIDER=${DB_PROVIDER}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - LOGS_PATH=${LOGS_PATH}
      - RATE_LIMITER_REQUEST_COUNT=${RATE_LIMITER_REQUEST_COUNT}
      - RATE_LIMITER_TIME_WINDOW_MS=${RATE_LIMITER_TIME_WINDOW_MS}
      - SESSION_SECRET=${SESSION_SECRET}
    ports:
      - "${APP_PORT}"
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy
    restart: on-failure

  database:
    image: mysql:8.3.0
    environment:
      - MYSQL_PORT=${DB_PORT}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "database" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

networks:
  app-network:

volumes:
  db_data: